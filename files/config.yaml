# HTTP(S) and SOCKS5 server on the same port
mixed-port: 7890

# Port of HTTP(S) proxy server on the local end
port: 7891

# Port of SOCKS5 proxy server on the local end
socks-port: 7892

# Transparent proxy server port for Linux and macOS (Redirect TCP and TProxy UDP)
redir-port: 7893

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7893

allow-lan: true

# This is only applicable when `allow-lan` is `true`
# '*': bind all IP addresses
# 192.168.122.11: bind a single IPv4 address
# "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address
# bind-address: '*'

# Clash router working mode
# rule: rule-based packet routing
# global: all packets will be forwarded to a single endpoint
# direct: directly forward the packets to the Internet
mode: rule

# Clash by default prints logs to STDOUT
# info / warning / error / debug / silent
log-level: info

# When set to false, resolver won't translate hostnames to IPv6 addresses
ipv6: false

external-controller: 0.0.0.0:9099

# A relative path to the configuration directory or an absolute path to a
# directory in which you put some static web resource. Clash core will then
# serve it at `http://{{external-controller}}/ui`.
external-ui: 'ui'

# Secret for the RESTful API (optional)
# Authenticate by spedifying HTTP header `Authorization: Bearer ${secret}`
# ALWAYS set a secret if RESTful API is listening on 0.0.0.0
secret: '123456'

interface-name: eno2

tun:
  enable: true
  stack: system # or gvisor
  dns-hijack:
    - tcp://8.8.8.8:53
    - tcp://8.8.4.4:53
    - udp://8.8.8.8:53
    - udp://8.8.4.4:53

hosts:
  # Firebase Cloud Messaging
  'mtalk.google.com': 108.177.125.188
  # Google Dl
  'dl.google.com': 180.163.151.161
  'dl.l.google.com': 180.163.151.161

dns:
  enable: true
  listen: 0.0.0.0:1053
  # ipv6: false # when the false, response to AAAA questions will be empty
  ipv6: false
  # These nameservers are used to resolve the DNS nameserver hostnames below.
  # Specify IP addresses only
  default-nameserver:
    - 119.29.29.29
    - 1.0.0.1
  enhanced-mode: redir-host # fake-ip
  fake-ip-range: 198.18.0.1/16
  # use-hosts: true # lookup hosts and return IP record
  
  # Hostnames in this list will not be resolved with fake IPs
  # i.e. questions to these domain names will always be answered with their
  # real IP addresses
  fake-ip-filter:
    - "*.lan"
    - time.windows.com
    - time.nist.gov
    - time.apple.com
    - time.asia.apple.com
    - "*.ntp.org.cn"
    - "*.openwrt.pool.ntp.org"
    - time1.cloud.tencent.com
    - time.ustc.edu.cn
    - pool.ntp.org
    - ntp.ubuntu.com
    - ntp.aliyun.com
    - ntp1.aliyun.com
    - ntp2.aliyun.com
    - ntp3.aliyun.com
    - ntp4.aliyun.com
    - ntp5.aliyun.com
    - ntp6.aliyun.com
    - ntp7.aliyun.com
    - time1.aliyun.com
    - time2.aliyun.com
    - time3.aliyun.com
    - time4.aliyun.com
    - time5.aliyun.com
    - time6.aliyun.com
    - time7.aliyun.com
    - "*.time.edu.cn"
    - time1.apple.com
    - time2.apple.com
    - time3.apple.com
    - time4.apple.com
    - time5.apple.com
    - time6.apple.com
    - time7.apple.com
    - time1.google.com
    - time2.google.com
    - time3.google.com
    - time4.google.com
    - music.163.com
    - "*.music.163.com"
    - "*.126.net"
    - musicapi.taihe.com
    - music.taihe.com
    - songsearch.kugou.com
    - trackercdn.kugou.com
    - "*.kuwo.cn"
    - api-jooxtt.sanook.com
    - api.joox.com
    - joox.com
    - y.qq.com
    - "*.y.qq.com"
    - streamoc.music.tc.qq.com
    - mobileoc.music.tc.qq.com
    - isure.stream.qqmusic.qq.com
    - dl.stream.qqmusic.qq.com
    - aqqmusic.tc.qq.com
    - amobile.music.tc.qq.com
    - "*.xiami.com"
    - "*.music.migu.cn"
    - music.migu.cn
    - "*.msftconnecttest.com"
    - "*.msftncsi.com"
    - localhost.ptlogin2.qq.com
    - "+.srv.nintendo.net"
    - "+.stun.playstation.net"
    - xbox.*.microsoft.com
    - "+.xboxlive.com"
    - stun.*.*
    - stun.*.*.*
    
  # Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.
  # All DNS questions are sent directly to the nameserver, without proxies
  # involved. Clash answers the DNS question with the first result gathered.
  nameserver:
    - 119.29.29.29
    - tls://dns.rubyfish.cn:853 # DNS over TLS
    - https://1.1.1.1/dns-query # DNS over HTTPS
        
  # When `fallback` is present, the DNS server will send concurrent requests
  # to the servers in this section along with servers in `nameservers`.
  # The answers from fallback servers are used when the GEOIP country
  # is not `CN`.
  # fallback:
  #   - tcp://1.1.1.1
  
  # If IP addresses resolved with servers in `nameservers` are in the specified
  # subnets below, they are considered invalid and results from `fallback`
  # servers are used instead.
  #
  # IP address resolved with servers in `nameserver` is used when
  # `fallback-filter.geoip` is true and when GEOIP of the IP address is `CN`.
  #
  # If `fallback-filter.geoip` is false, results from `nameserver` nameservers
  # are always used if not match `fallback-filter.ipcidr`.
  #
  # This is a countermeasure against DNS pollution attacks.
  fallback-filter:
    geoip: true
    ipcidr:
      - 0.0.0.0/8
      - 10.0.0.0/8
      - 100.64.0.0/10
      - 127.0.0.0/8
      - 169.254.0.0/16
      - 172.16.0.0/12
      - 192.0.0.0/24
      - 192.0.2.0/24
      - 192.88.99.0/24
      - 192.168.0.0/16
      - 198.18.0.0/15
      - 198.51.100.0/24
      - 203.0.113.0/24
      - 224.0.0.0/4
      - 240.0.0.0/4
      - 255.255.255.255/32
    domain:
      - "+.google.com"
      - "+.facebook.com"
      - "+.youtube.com"
      - "+.githubusercontent.com"
  
proxy-providers:
  SUB001:
    type: http
    url: "" # 放机场订阅链接
    interval: 3600
    path: ./Proxy/SUB001.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
 
proxy-groups:
  - name: 🚀  Proxy
    type: select
    proxies:
      - 🕹️  Auto
    use:
      - SUB001

  - name: 📺  Youtube
    type: select
    proxies:
      - 🚀  Proxy
    use:
      - SUB001

  - name: 🎬  Netflix
    type: select
    proxies:
      - 🚀  Proxy
    use:
      - SUB001

  - name: 🎞️  Streaming
    type: select
    proxies:
      - 🚀  Proxy
    use:
      - SUB001

  - name: 🍎  Apple
    type: select
    proxies:
      - 🎯  Direct
      - 🚀  Proxy
    use:
      - SUB001

  - name: 🎮  Steam
    type: select
    proxies:
      - 🎯  Direct
      - 🚀  Proxy

  - name: 🎯  Direct
    type: select
    proxies:
      - DIRECT
      - 🚀  Proxy

  - name: 🛑 Block
    type: select
    proxies:
      - REJECT
      - 🎯  Direct

  - name: 🕹️  Auto
    type: url-test
    use:
      - SUB001
    url: 'http://www.gstatic.com/generate_204'
    interval: 500

  - name: ⌛  Final
    type: select
    proxies:
      - 🎯  Direct
      - 🚀  Proxy

# 关于 Rule Provider 请查阅：https://lancellc.gitbook.io/clash/clash-config-file/rule-provider

rule-providers:
# name: # Provider 名称
#   type: http # http 或 file
#   behavior: classical # 或 ipcidr、domain
#   path: # 文件路径
#   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
#   interval: # 自动更新间隔，仅在类型为 HTTP 时可用

  Unbreak:
    type: http
    behavior: classical
    path: ./RuleSet/Unbreak.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Unbreak.yaml
    interval: 86400

  Advertising:
    type: http
    behavior: classical
    path: ./RuleSet/Guard/Advertising.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Guard/Advertising.yaml
    interval: 86400
    
  Hijacking:
    type: http
    behavior: classical
    path: ./RuleSet/Guard/Hijacking.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Guard/Hijacking.yaml
    interval: 86400

  Privacy:
    type: http
    behavior: classical
    path: ./RuleSet/Guard/Privacy.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Guard/Privacy.yaml
    interval: 86400

  Streaming:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/Streaming.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/Streaming.yaml
    interval: 86400

  YouTube:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/Video/YouTube.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/Video/YouTube.yaml
    interval: 86400

  Netflix:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/Video/Netflix.yaml
    # url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/Video/Netflix.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/lhie1/Rules/master/Clash/Provider/Media/Netflix.yaml
    interval: 86400

  Apple:
    type: http
    behavior: classical
    path: ./RuleSet/Extra/Apple/Apple.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Extra/Apple/Apple.yaml
    interval: 86400

  Steam:
    type: http
    behavior: classical
    path: ./RuleSet/Extra/Game/Steam.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Extra/Game/Steam.yaml
    interval: 86400
  
  Global:
    type: http
    behavior: classical
    path: ./RuleSet/Global.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Global.yaml
    interval: 86400
    
  IP-Blackhole:
    type: http
    behavior: ipcidr
    path: ./RuleSet/Extra/IP-Blackhole.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Extra/IP-Blackhole.yaml
    interval: 86400
    
  China:
    type: http
    behavior: classical
    path: ./RuleSet/China.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/China.yaml
    interval: 86400

  ChinaIP:
    type: http
    behavior: ipcidr
    path: ./RuleSet/Extra/ChinaIP.yaml
    url: https://ghproxy.com/https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Extra/ChinaIP.yaml
    interval: 86400
    
rules:
  # SrcIPCIDR
  - PROCESS-NAME,qbittorrent-nox-bin,DIRECT
  - SRC-IP-CIDR,10.10.10.10/32,DIRECT
  - SRC-IP-CIDR,10.10.10.100/32,DIRECT
  
  # Unbreak
  - RULE-SET,Unbreak,🎯  Direct
  
  # Hijacking
  - RULE-SET,Hijacking,🛑 Block

  # Advertising
  - RULE-SET,Advertising,🛑 Block
    
  # Global Area Network
  
  # Steam
  - RULE-SET,Steam,🎮  Steam
  
  # (Streaming Media)
  - RULE-SET,YouTube,📺  Youtube
  - RULE-SET,Netflix,🎬  Netflix
  - RULE-SET,Streaming,🎞️  Streaming

  # (DNS Cache Pollution) / (IP Blackhole) / (Region-Restricted Access Denied) / (Network Jitter)
  - RULE-SET,Global,🚀  Proxy
  # - RULE-SET,IP-Blackhole,🚀  Proxy

  # Apple
  - RULE-SET,Apple,🍎  Apple

  # China Area Network
  - RULE-SET,China,🎯  Direct

  # Local Area Network
  - IP-CIDR,10.0.0.0/8,DIRECT
  - IP-CIDR,100.64.0.0/10,DIRECT
  - IP-CIDR,127.0.0.0/8,DIRECT
  - IP-CIDR,172.16.0.0/12,DIRECT
  - IP-CIDR,192.168.0.0/16,DIRECT
  - IP-CIDR,224.0.0.0/4,DIRECT
  - IP-CIDR,fe80::/10,DIRECT
  
  # （可选）使用来自 ipipdotnet 的 ChinaIP 以解决数据不准确的问题，使用 ChinaIP.yaml 时可禁用下列直至（包括）「GEOIP,CN」规则
  # - RULE-SET,ChinaIP,🎯  Direct
  # GeoIP China
  - GEOIP,CN,🎯  Direct
  - MATCH,⌛  Final
